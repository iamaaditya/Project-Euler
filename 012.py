# -*- coding: utf-8 -*-
"""
Created on Mon Apr 07 11:40:31 2014

@author: aaditya prakash
"""

import utilities
import math

problem_number = '012'
problem_statement = """
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
We can see that 28 is the first triangle number to have over five divisors.
What is the value of the first triangle number to have over five hundred divisors?
"""

def smallest_tri_over_x_factors(number):
    """ Returns the smallest triangle number which has more factors than 'number' """
    iterTri = utilities.TriangleNumber(1)
    while True:
        nextIter = iterTri.next()
        lenNextTriangleFactors = len(utilities.AllFactors(nextIter))
        #print(nextIter, lenNextTriangleFactors )        
        if lenNextTriangleFactors > number:
            return nextIter
        

print(smallest_tri_over_x_factors(500))

answer = '76576500'